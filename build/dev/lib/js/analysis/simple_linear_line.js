"use strict";define(["../chart/line_chart","../chart/datatables","../util/utils","ng!$q","../../vendor/d3-format.min"],function(e,r,o,t,a){return{createCube:function(e,r){var t=r.layout,a=o.validateDimension(t.props.dimensions[0]),s=[{qNullSuppression:!0,qDef:{qFieldDefs:[a],qSortCriterias:[{qSortByExpression:t.props.dimSort||!t.props.dimSortByExpression?0:t.props.dimSortByExpressionAsc,qSortByNumeric:t.props.dimSort?1:t.props.dimSortByNum?t.props.dimSortByNumAsc:0,qSortByAscii:t.props.dimSort||!t.props.dimSortByAlph?0:t.props.dimSortByAlphAsc,qExpression:{qv:t.props.dimSortByExpressionString}}]}}],n=o.validateMeasure(t.props.measures[0]),p='json<-toJSON(list(res[,1], res[,2], res[,3], coef(summary(lm_result))[,"Estimate"]));';t.props.extendLine&&(p="by<-q$Dimension[length(q$Dimension)]-q$Dimension[length(q$Dimension)-1]; from<-q$Dimension[length(q$Dimension)]+by;\n                    data<-seq(from=from, by=by, length.out="+t.props.extendDurations+'); newdata <-data.frame(Dimension=data); pred_res<-predict(lm_result,newdata, interval="'+t.props.interval+'", level='+t.props.confidenceLevel+');\n                    json<-toJSON(list(res[,1], res[,2], res[,3], coef(summary(lm_result))[,"Estimate"], pred_res[,1], pred_res[,2], pred_res[,3]));'),o.displayDebugModeMessage(t.props.debugMode);var l=o.getDebugSaveDatasetScript(t.props.debugMode,"debug_simple_linear_line.rda"),i="R.ScriptEvalExStr('NN','"+l+' library(jsonlite); lm_result <- lm(Measure~Dimension, data=q);res<-predict(lm_result, interval="'+t.props.interval+'", level='+t.props.confidenceLevel+");\n      "+p+" json;',"+a+" as Dimension, "+n+" as Measure)";o.displayRScriptsToConsole(t.props.debugMode,[i]);var d=[{qDef:{qDef:n}},{qDef:{qLabel:"Fit",qDef:i}},{qDef:{qLabel:"-",qDef:""}},{qDef:{qLabel:"-",qDef:""}},{qDef:{qLabel:"-",qDef:""}}];return r.backendApi.applyPatches([{qPath:"/qHyperCubeDef/qDimensions",qOp:"replace",qValue:JSON.stringify(s)},{qPath:"/qHyperCubeDef/qMeasures",qOp:"replace",qValue:JSON.stringify(d)}],!1),r.patchApplied=!0,null},drawChart:function(a,s){var n=t.defer(),p=a.layout,l=[{qTop:0,qLeft:0,qWidth:6,qHeight:1500}];return a.backendApi.getData(l).then(function(t){var l=(a.layout.qHyperCube.qMeasureInfo,null),i=t[0].qMatrix;if(0===i[0][2].qText.length||"-"==i[0][2].qText)for(var d=0;d<i.length;d++)0!==i[d][2].qText.length&&"-"!==i[d][2].qText&&(l=JSON.parse(i[d][2].qText));else l=JSON.parse(i[0][2].qText);if(null==l)o.displayConnectionError(a.extId);else{o.displayReturnedDatasetToConsole(p.props.debugMode,t[0]);var u=o.getDefaultPaletteColor(),m=l[0],c=l[1],f=l[2],q=l[3],b=l[4],h=l[5],y=l[6],g="y="+q[1]+"x";if(g+=q[0]<0?""+q[0]:"+"+q[0],"undefined"==typeof a.layout.props.displayTable||0==a.layout.props.displayTable){var v=[],x=[],D=[];if($.each(t[0].qMatrix,function(e,r){v.push(r[0].qElemNumber),x.push(r[0].qText),D.push(r[1].qNum)}),p.props.extendLine){$.merge(m,b),$.merge(c,h),$.merge(f,y);for(var S=0;S<p.props.extendDurations;S++)x.push("+"+(S+1)),D.push("")}var N=[{x:x,y:D,elemNum:v,name:"Observed",mode:"lines+markers",fill:p.props.line,fillcolor:p.props.colors?"rgba("+u[3]+",0.3)":"rgba("+o.getConversionRgba(p.props.colorForMain.color,1)+")",marker:{color:p.props.colors?"rgba("+u[3]+",1)":"rgba("+o.getConversionRgba(p.props.colorForMain.color,1)+")",size:p.props.datapoints?p.props.pointRadius:1},line:{width:p.props.borderWidth}},{x:x,y:m,name:"Fit",line:{color:p.props.colors?"rgba("+u[7]+", 1)":"rgba("+o.getConversionRgba(p.props.colorForSub.color,1)+")"}},{x:x,y:c,name:"Lower",fill:"tonexty",fillcolor:p.props.colors?"rgba("+u[7]+",0.3)":"rgba("+o.getConversionRgba(p.props.colorForSub.color,.3)+")",type:"scatter",mode:"none"},{x:x,y:f,name:"Upper",fill:"tonexty",fillcolor:p.props.colors?"rgba("+u[7]+",0.3)":"rgba("+o.getConversionRgba(p.props.colorForSub.color,.3)+")",type:"scatter",mode:"none"}],B=Math.floor(x.length/2),M=x[B],C=m[B],E={annotations:[]};p.props.displayFormula&&E.annotations.push({x:M,y:C,text:g,xref:"x",yref:"y",ax:-30,ay:-40,showarrow:!0,arrowhead:3}),$(".advanced-analytics-toolsets-"+a.extId).html('<div id="aat-chart-'+a.extId+'" style="width:100%;height:100%;"></div>');var L=e.draw(a,N,"aat-chart-"+a.extId,E);e.setEvents(L,a,s)}else{var T=o.getLocale(a,0),_=o.getNumberFormat(a,0),w=[];if($.each(t[0].qMatrix,function(e,r){w.push([r[0].qElemNumber,r[0].qText,T.format(_)(r[1].qNum).replace(/G/,"B"),T.format(_)(m[e]).replace(/G/,"B"),T.format(_)(c[e]).replace(/G/,"B"),T.format(_)(f[e]).replace(/G/,"B")])}),p.props.extendLine)for(var F=0;F<p.props.forecastingPeriods;F++)w.push(["","+"+(F+1),"",T.format(_)(b[F]).replace(/G/,"B"),T.format(_)(h[F]).replace(/G/,"B"),T.format(_)(y[F]).replace(/G/,"B")]);var A='\n              <table id="aat-table-'+a.extId+'" class="display">\n                <thead>\n                  <tr>\n                    <th>qElemNumber</th>\n                    <th>'+a.layout.props.dimensions[0].label+"</th>\n                    <th>"+a.layout.props.measures[0].label+"</th>\n                    <th>Fit</th>\n                    <th>Lower</th>\n                    <th>Upper</th>\n                  </tr>\n                </thead>\n                <tbody>\n                </tbody>\n              </table>";r.draw(s,a,"#aat-table-"+a.extId,w,A,null).then(function(e){r.setEvents(e,a,s)})}}return n.resolve()}),n.promise}}});
//# sourceMappingURL=../../maps/analysis/simple_linear_line.js.map
