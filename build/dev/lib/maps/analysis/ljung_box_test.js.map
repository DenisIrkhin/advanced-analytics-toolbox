{"version":3,"sources":["analysis/ljung_box_test.js"],"names":["define","utils","$q","createCube","app","$scope","layout","dimension","validateDimension","props","dimensions","qNullSuppression","qDef","qFieldDefs","qSortCriterias","qSortByNumeric","measure","validateMeasure","measures","lag","lagValue","displayDebugModeMessage","debugMode","saveRDataset","getDebugSaveDatasetScript","dataType","defMea1","dataTitle","differencing","seasonalDifferences","firstDifferences","displayRScriptsToConsole","qLabel","backendApi","applyPatches","qPath","qOp","qValue","JSON","stringify","patchApplied","drawChart","defer","requestPage","qTop","qLeft","qWidth","qHeight","getData","then","dataPages","qHyperCube","qMeasureInfo","qMatrix","qText","length","displayConnectionError","extId","displayReturnedDatasetToConsole","result","parse","$","html","resolve","promise"],"mappings":"AAAA,YAAAA,SACE,gBACA,SACC,SAACC,EAAOC,GACT,OASEC,WATK,SASMC,EAAKC,GACd,GAAMC,GAASD,EAAOC,OAMhBC,EAAYN,EAAMO,kBAAkBF,EAAOG,MAAMC,WAAW,IAC5DA,IACJC,kBAAkB,EAClBC,MACEC,YAAaN,GACbO,iBACEC,eAAgB,OAKhBC,EAAUf,EAAMgB,gBAAgBX,EAAOG,MAAMS,SAAS,IAGxDC,EAAM,EAENb,GAAOG,MAAMU,OAAQ,IACvBA,EAAAA,SAAeb,EAAOG,MAAMW,SAA5B,KAIFnB,EAAMoB,wBAAwBf,EAAOG,MAAMa,UAC3C,IAAMC,GAAetB,EAAMuB,0BAA0BlB,EAAOG,MAAMa,UAAW,4BAGvEG,EAAW,IACbC,EAAU,IACdrB,GAAOsB,UAAY,KAEe,IAA9BrB,EAAOG,MAAMmB,cACfF,EAAAA,sBAAgCD,EAAhC,MAA8CF,EAA9C,qDAA+GjB,EAAOG,MAAMoB,oBAA5H,uBAAsKV,EAAtK,2EAAoPH,EAApP,eACAX,EAAOsB,UAAP,QAA2BX,EAA3B,IAAsCV,EAAOG,MAAMoB,oBAAnD,KACuC,IAA9BvB,EAAOG,MAAMmB,cACtBF,EAAAA,sBAAgCD,EAAhC,MAA8CF,EAA9C,0DAAoHjB,EAAOG,MAAMoB,oBAAjI,MAA0JvB,EAAOG,MAAMqB,iBAAvK,uBAA8MX,EAA9M,2EAA4RH,EAA5R,eACAX,EAAOsB,UAAP,aAAgCX,EAAhC,KAA4CV,EAAOG,MAAMoB,oBAAzD,KAAiFvB,EAAOG,MAAMqB,iBAA9F,MAEAJ,EAAAA,sBAAgCD,EAAhC,MAA8CF,EAA9C,iEAA2HJ,EAA3H,2EAAyMH,EAAzM,eACAX,EAAOsB,UAAYX,GAIrBf,EAAM8B,yBAAyBzB,EAAOG,MAAMa,WAAYI,GAExD,IAAMR,KAEFN,MACEoB,OAAQ,UACRpB,KAAMc,KAIRd,MACEoB,OAAQ,IACRpB,KAAM,MAIRA,MACEoB,OAAQ,IACRpB,KAAM,MAIRA,MACEoB,OAAQ,IACRpB,KAAM,MAIRA,MACEoB,OAAQ,IACRpB,KAAM,KAmBZ,OAdAP,GAAO4B,WAAWC,eAEdC,MAAO,6BACPC,IAAK,UACLC,OAAQC,KAAKC,UAAU7B,KAGvByB,MAAO,2BACPC,IAAK,UACLC,OAAQC,KAAKC,UAAUrB,MAExB,GAEHb,EAAOmC,cAAe,EACf,MASTC,UAnHK,SAmHKpC,GACR,GAAMqC,GAAQxC,EAAGwC,QACXpC,EAASD,EAAOC,OAGhBqC,GADY1C,EAAMO,kBAAkBF,EAAOG,MAAMC,WAAW,MAEhEkC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRC,QAAS,IAoCX,OAjCA1C,GAAO4B,WAAWe,QAAQL,GAAaM,KAAK,SAACC,GACvB7C,EAAOC,OAAO6C,WAAWC,YAG7C,IAAgD,IAA5CF,EAAU,GAAGG,QAAQ,GAAG,GAAGC,MAAMC,QAAoD,KAApCL,EAAU,GAAGG,QAAQ,GAAG,GAAGC,MAC9ErD,EAAMuD,uBAAuBnD,EAAOoD,WAC/B,CAELxD,EAAMyD,gCAAgCpD,EAAOG,MAAMa,UAAW4B,EAAU,GAExE,IAAMS,GAASrB,KAAKsB,MAAMV,EAAU,GAAGG,QAAQ,GAAG,GAAGC,MAGrDO,GAAAA,gCAAkCxD,EAAOoD,OACxCK,KADD,qRAU6BzD,EAAOsB,UAVpC,yDAWkCgC,EAAO,GAXzC,kDAY2BA,EAAO,GAZlC,uDAagCA,EAAO,GAbvC,wEAkBF,MAAOjB,GAAMqB,YAERrB,EAAMsB","file":"../../js/analysis/ljung_box_test.js","sourcesContent":["define([\r\n  '../util/utils',\r\n  'ng!$q',\r\n], (utils, $q) => {\r\n  return {\r\n    /**\r\n     * createCube - create HyperCubes\r\n     *\r\n     * @param {Object} app    reference to app\r\n     * @param {Object} $scope angular $scope\r\n     *\r\n     * @return {Null} null\r\n     */\r\n    createCube(app, $scope) {\r\n      const layout = $scope.layout;\r\n\r\n      // Display loader\r\n      // utils.displayLoader($scope.extId);\r\n\r\n      // Set definitions for dimensions and measures\r\n      const dimension = utils.validateDimension(layout.props.dimensions[0]);\r\n      const dimensions = [{\r\n        qNullSuppression: true,\r\n        qDef: {\r\n          qFieldDefs: [dimension],\r\n          qSortCriterias: [{\r\n            qSortByNumeric: 1,\r\n          }],\r\n        },\r\n      }];\r\n\r\n      const measure = utils.validateMeasure(layout.props.measures[0]);\r\n\r\n      // Set lag\r\n      let lag = '';\r\n\r\n      if (layout.props.lag === false) {\r\n        lag = `, lag=${layout.props.lagValue} `\r\n      }\r\n\r\n      // Debug mode - set R dataset name to store the q data.\r\n      utils.displayDebugModeMessage(layout.props.debugMode);\r\n      const saveRDataset = utils.getDebugSaveDatasetScript(layout.props.debugMode, 'debug_ljung_box_test.rda');\r\n\r\n      // Set first and seasonal differences to acf and pacf\r\n      const dataType = 'N';\r\n      let defMea1 = null;\r\n      $scope.dataTitle = null;\r\n\r\n      if (layout.props.differencing === 1) {\r\n        defMea1 = `R.ScriptEvalExStr('${dataType}','${saveRDataset} library(jsonlite); res<-Box.test(diff(q$Measure, ${layout.props.seasonalDifferences}), type=\"Ljung-Box\" ${lag}); json<-toJSON(list(res$statistic,res$parameter,res$p.value)); json;', ${measure} as Measure)`;\r\n        $scope.dataTitle = `diff(${measure},${layout.props.seasonalDifferences})`;\r\n      } else if (layout.props.differencing === 2) {\r\n        defMea1 = `R.ScriptEvalExStr('${dataType}','${saveRDataset} library(jsonlite); res<-Box.test(diff(diff(q$Measure, ${layout.props.seasonalDifferences}), ${layout.props.firstDifferences}), type=\"Ljung-Box\" ${lag}); json<-toJSON(list(res$statistic,res$parameter,res$p.value)); json;', ${measure} as Measure)`;\r\n        $scope.dataTitle = `diff(diff(${measure}, ${layout.props.seasonalDifferences}),${layout.props.firstDifferences})`;\r\n      } else {\r\n        defMea1 = `R.ScriptEvalExStr('${dataType}','${saveRDataset} library(jsonlite); res<-Box.test(q$Measure, type=\"Ljung-Box\" ${lag}); json<-toJSON(list(res$statistic,res$parameter,res$p.value)); json;', ${measure} as Measure)`;\r\n        $scope.dataTitle = measure;\r\n      }\r\n\r\n      // Debug mode - display R Scripts to console\r\n      utils.displayRScriptsToConsole(layout.props.debugMode, [defMea1]);\r\n\r\n      const measures = [\r\n        {\r\n          qDef: {\r\n            qLabel: 'Results',\r\n            qDef: defMea1,\r\n          },\r\n        },\r\n        {\r\n          qDef: {\r\n            qLabel: '-',\r\n            qDef: '', // Dummy\r\n          },\r\n        },\r\n        {\r\n          qDef: {\r\n            qLabel: '-',\r\n            qDef: '', // Dummy\r\n          },\r\n        },\r\n        {\r\n          qDef: {\r\n            qLabel: '-',\r\n            qDef: '', // Dummy\r\n          },\r\n        },\r\n        {\r\n          qDef: {\r\n            qLabel: '-',\r\n            qDef: '', // Dummy\r\n          },\r\n        },\r\n      ];\r\n\r\n      $scope.backendApi.applyPatches([\r\n        {\r\n          qPath: '/qHyperCubeDef/qDimensions',\r\n          qOp: 'replace',\r\n          qValue: JSON.stringify(dimensions),\r\n        },\r\n        {\r\n          qPath: '/qHyperCubeDef/qMeasures',\r\n          qOp: 'replace',\r\n          qValue: JSON.stringify(measures),\r\n        },\r\n      ], false);\r\n\r\n      $scope.patchApplied = true;\r\n      return null;\r\n    },\r\n    /**\r\n     * drawChart - draw chart with updated data\r\n     *\r\n     * @param {Object} $scope angular $scope\r\n     *\r\n     * @return {Object} Promise object\r\n     */\r\n    drawChart($scope) {\r\n      const defer = $q.defer();\r\n      const layout = $scope.layout;\r\n\r\n      const dimension = utils.validateDimension(layout.props.dimensions[0]);\r\n      const requestPage = [{\r\n        qTop: 0,\r\n        qLeft: 0,\r\n        qWidth: 6,\r\n        qHeight: 1,\r\n      }];\r\n\r\n      $scope.backendApi.getData(requestPage).then((dataPages) => {\r\n        const measureInfo = $scope.layout.qHyperCube.qMeasureInfo;\r\n\r\n        // Display error when all measures' grand total return NaN.\r\n        if (dataPages[0].qMatrix[0][1].qText.length === 0 || dataPages[0].qMatrix[0][1].qText == '-') {\r\n          utils.displayConnectionError($scope.extId);\r\n        } else {\r\n          // Debug mode - display returned dataset to console\r\n          utils.displayReturnedDatasetToConsole(layout.props.debugMode, dataPages[0]);\r\n\r\n          const result = JSON.parse(dataPages[0].qMatrix[0][1].qText);\r\n\r\n          // Set HTML element for chart\r\n          $(`.advanced-analytics-toolsets-${$scope.extId}`)\r\n          .html(`\r\n            <h2>Box-Ljung Test</h2>\r\n            <table class=\"simple\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Item</th><th>Value</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr><td>data</td><td>${$scope.dataTitle}</td></tr>\r\n                <tr><td>X-squared</td><td>${result[0]}</td></tr>\r\n                <tr><td>df</td><td>${result[1]}</td></tr>\r\n                <tr><td>p-value</td><td>${result[2]}</td></tr>\r\n              </tbody>\r\n            </table>\r\n          `);\r\n        }\r\n        return defer.resolve();\r\n      });\r\n      return defer.promise;\r\n    },\r\n  };\r\n});\r\n"]}